import{_ as s,c as e,o as a,a4 as i}from"./chunks/framework.B358x4hV.js";const u=JSON.parse('{"title":"Export plugin","description":"","frontmatter":{},"headers":[],"relativePath":"en/plugins/doExport.md","filePath":"en/plugins/doExport.md"}'),t={name:"en/plugins/doExport.md"},n=i(`<h1 id="export-plugin" tabindex="-1">Export plugin <a class="header-anchor" href="#export-plugin" aria-label="Permalink to &quot;Export plugin&quot;">​</a></h1><p>The <code>Export</code> plugin provides the export function.</p><p>Please refer to the <a href="./../api/constructor/constructor-options.html#_2-export-plugin">Instantiation Options</a> for configuration.</p><h2 id="register" tabindex="-1">Register <a class="header-anchor" href="#register" aria-label="Permalink to &quot;Register&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Export </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/Export.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// import Export from &#39;simple-mind-map/src/Export.js&#39; Use this path for versions below v0.6.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Export)</span></span></code></pre></div><p>After registration and instantiation of <code>MindMap</code>, the instance can be obtained through <code>mindMap.doExport</code>.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p>All exported methods are asynchronous and return an instance of <code>Promise</code>. You can use the <code>then</code> method to obtain data, or use the <code>async await</code> function to obtain:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.doExport.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">png</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mindMap.doExport.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">png</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>The returned data is in the format of <code>data:URL</code>. You can create an <code>a</code> tag to trigger the download:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a.href </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;xxx.png&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .png、.svg、.pdf、.md、.json、.smm、.jpg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a.download </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;xxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="png-name-transparent-false-node-null-fitbg-false" tabindex="-1">png(name, transparent = false, node = null, fitBg = false) <a class="header-anchor" href="#png-name-transparent-false-node-null-fitbg-false" aria-label="Permalink to &quot;png(name, transparent = false, node = null, fitBg = false)&quot;">​</a></h3><blockquote><p>Versions below v0.9.2 are：png(name, transparent = false, checkRotate, compress)</p></blockquote><blockquote><p>Versions below v0.7.0 are: png(name, transparent = false, rotateWhenWidthLongerThenHeight)</p></blockquote><ul><li><p><code>name</code>: Name, optional</p></li><li><p><code>transparent</code>: v0.5.7+, Specify whether the background of the exported image is transparent</p></li><li><p><code>rotateWhenWidthLongerThenHeight</code>: v0.6.15+, V0.7.0+abandoned, Boolean, false, Automatically rotate 90 degrees when the image has a width to height ratio</p></li><li><p><code>checkRotate</code>: v0.7.0+, (v0.9.2+obsolete), Function, You can pass a function that takes two parameters, the width and height of the image, and returns true or false. True represents that the image needs to be rotated by 90 degrees</p></li><li><p><code>compress</code>：v0.8.1+, (v0.9.2+obsolete)，null | { width, height }, The parameter for compressing images. In some cases, the length and width of the exported image may be very large. If you want to reduce it, you can use this parameter to control it. Only one width or height can be provided, and it will be scaled proportionally</p></li><li><p><code>node</code>：v0.9.11+，Node instances, if passed, will only export the content of that node;</p></li><li><p><code>fitBg</code>：v0.14.0+，<code>Boolean</code>，If there is a background image, the exported image size will be adjusted to display the complete background image when passing &#39;true&#39;. Otherwise, the mind map content will be exported in the same size, and the background image may not be fully displayed. If &#39;transparent&#39; passes &#39;true&#39;, then this parameter will be ignored</p></li></ul><p>Exports as <code>png</code>.</p><h3 id="jpg-name-transparent-false-node-null-fitbg-false" tabindex="-1">jpg(name, transparent = false, node = null, fitBg = false) <a class="header-anchor" href="#jpg-name-transparent-false-node-null-fitbg-false" aria-label="Permalink to &quot;jpg(name, transparent = false, node = null, fitBg = false)&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>Export as &#39;jpg&#39;. The parameters are the same as &#39;png&#39;.</p><h3 id="svg-name-pluscsstext" tabindex="-1">svg(name, plusCssText) <a class="header-anchor" href="#svg-name-pluscsstext" aria-label="Permalink to &quot;svg(name, plusCssText)&quot;">​</a></h3><ul><li><p><code>name</code>：<code>svg</code> title</p></li><li><p><code>plusCssText</code>：v0.4.0+, （v0.6.16+This parameter has been removed and instead passed in through the <code>resetCss</code> configuration during instantiation）, When node rich text editing is enabled and <code>domToImage</code> passes <code>false</code>, additional <code>css</code> styles can be added. If there is a <code>dom</code> node in <code>svg</code>, you can set some styles for the node through this parameter, such as:</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \`* {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    margin: 0;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    padding: 0;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    box-sizing: border-box;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  }\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Exports as <code>svg</code>.</p><h3 id="pdf-name-transparent-false-fitbg-false" tabindex="-1">pdf(name, transparent = false, fitBg = false) <a class="header-anchor" href="#pdf-name-transparent-false-fitbg-false" aria-label="Permalink to &quot;pdf(name, transparent = false, fitBg = false)&quot;">​</a></h3><blockquote><p>v0.8.1：pdf(name, useMultiPageExport, maxImageWidth)</p></blockquote><blockquote><p>v0.2.1+</p></blockquote><ul><li><p><code>name</code>：File name</p></li><li><p><code>useMultiPageExport</code>: v0.6.15+, (v0.9.2+obsolete), Boolean, false, Whether to export multiple pages, default to single page</p></li><li><p><code>maxImageWidth</code>：v0.8.1+, (v0.9.2+obsolete)，null | Number，The default is twice the width of A4 paper, which is a parameter for compressing images. In some cases, the length and width of the image may be very large, resulting in a very large PDF volume. Therefore, if you want to reduce the volume, you can use this parameter to control the maximum width of the image</p></li><li><p><code>transparent</code>：v0.9.2+，Boolean，default is false，Specify whether the background of the exported image is transparent</p></li><li><p><code>fitBg</code>：v0.14.0+，<code>Boolean</code>，If there is a background image, the exported image size will be adjusted to display the complete background image when passing &#39;true&#39;. Otherwise, the mind map content will be exported in the same size, and the background image may not be fully displayed. If &#39;transparent&#39; passes &#39;true&#39;, then this parameter will be ignored</p></li></ul><p>Export as <code>pdf</code>. Unlike other export methods, this method does not return data and directly triggers the download.</p><blockquote><p>In versions before v0.9.3, this method does not return data and will directly trigger the download.</p></blockquote><blockquote><p>After v0.6.0, an additional ExportPDF plugin needs to be registered</p></blockquote><blockquote><p>The internal export of PDF uses the PDF lib library to convert images into PDF. Currently, when exporting PDF with a large number of nodes, some content may be lost. Therefore, it is recommended that capable developers implement the PDF export function themselves. If there are backend developers in the project, they can also seek support from backend developers.</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ExportPDF </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/ExportPDF.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ExportPDF)</span></span></code></pre></div><h3 id="json-name-withconfig" tabindex="-1">json(name, withConfig) <a class="header-anchor" href="#json-name-withconfig" aria-label="Permalink to &quot;json(name, withConfig)&quot;">​</a></h3><p><code>name</code>：It is temporarily useless, just pass an empty string</p><p><code>withConfig\`\`：Boolean</code>, default <code>true</code>, Whether the data contains configuration, otherwise it is pure mind map node data</p><p>Return <code>json</code> data.</p><h3 id="md" tabindex="-1">md() <a class="header-anchor" href="#md" aria-label="Permalink to &quot;md()&quot;">​</a></h3><blockquote><p>v0.4.7+</p></blockquote><p>Export as <code>markdown</code> file.</p><h3 id="getsvgdata-node" tabindex="-1">getSvgData(node) <a class="header-anchor" href="#getsvgdata-node" aria-label="Permalink to &quot;getSvgData(node)&quot;">​</a></h3><p><code>node</code>: v0.9.11+, Node instance, if passed, will return a &#39;clipData&#39; object, representing the position coordinate data of the node region cropped from the complete image;</p><p>Gets <code>svg</code> data, an async method that returns an object:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  node, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// svg node</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  str, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// svg string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  clipData</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="xmind-name" tabindex="-1">xmind(name) <a class="header-anchor" href="#xmind-name" aria-label="Permalink to &quot;xmind(name)&quot;">​</a></h3><blockquote><p>v0.6.6+, an additional ExportXMind plugin needs to be registered</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ExportXMind </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/ExportXMind.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ExportXMind)</span></span></code></pre></div><p>Export as an <code>xmind</code> file type, asynchronous method, returns a <code>Promise</code> instance, and the returned data is the <code>data:url</code> data of a <code>zip</code> compressed package, which can be directly downloaded.</p><h3 id="txt" tabindex="-1">txt() <a class="header-anchor" href="#txt" aria-label="Permalink to &quot;txt()&quot;">​</a></h3><blockquote><p>v0.9.8+</p></blockquote><p>Export as <code>txt</code> file.</p>`,50),p=[n];function l(o,h,d,r,c,k){return a(),e("div",null,p)}const m=s(t,[["render",l]]);export{u as __pageData,m as default};
