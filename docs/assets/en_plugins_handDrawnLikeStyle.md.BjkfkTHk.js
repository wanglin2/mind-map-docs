import{_ as a}from"./chunks/手绘风格.A4mGWtgg.js";import{_ as s,c as i,o as e,a4 as n}from"./chunks/framework.B358x4hV.js";const m=JSON.parse('{"title":"HandDrawnLikeStyle chargeable plugin","description":"","frontmatter":{},"headers":[],"relativePath":"en/plugins/handDrawnLikeStyle.md","filePath":"en/plugins/handDrawnLikeStyle.md"}'),t={name:"en/plugins/handDrawnLikeStyle.md"},l=n('<h1 id="handdrawnlikestyle-chargeable-plugin" tabindex="-1">HandDrawnLikeStyle chargeable plugin <a class="header-anchor" href="#handdrawnlikestyle-chargeable-plugin" aria-label="Permalink to &quot;HandDrawnLikeStyle chargeable plugin&quot;">​</a></h1><p>HandDrawnLikeStyle plugin provides a hand drawn style, where the connections and shapes of nodes become hand drawn, just like the following:</p><img src="'+a+`" style="width:800px;"><h2 id="charge" tabindex="-1">Charge <a class="header-anchor" href="#charge" aria-label="Permalink to &quot;Charge&quot;">​</a></h2><p>Please switch to the Chinese documentation for this plugin to view.</p><h2 id="register" tabindex="-1">Register <a class="header-anchor" href="#register" aria-label="Permalink to &quot;Register&quot;">​</a></h2><p>1.Referencing packaged files:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HandDrawnLikeStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;handDrawnLikeStyle.cjs.min.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Or import HandDrawnLikeStyle from &#39;handDrawnLikeStyle.esm.min.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// If you want a package file in iife format, you can add the following in the build command of the package.json plugin: esbuild ./index.js --bundle --minify --external:buffer --format=iife --outfile=./dist/xxx.iife.min.js --global-name=xxx, Then execute npm run build again to generate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HandDrawnLikeStyle)</span></span></code></pre></div><p>2.Referencing Unpackaged Source Code</p><p>You can first enter the plugin directory to execute:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span></span></code></pre></div><p>Then enter your project root directory to execute:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> simple-mind-map-plugin-handdrawnlikestyle</span></span></code></pre></div><p>Then you can directly import it for use:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HandDrawnLikeStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map-plugin-handdrawnlikestyle&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HandDrawnLikeStyle)</span></span></code></pre></div><p>After registration and instantiation of <code>MindMap</code>, the instance can be obtained through <code>mindMap.handDrawnLikeStyle</code>.</p><p>After registering the plugin, there is no need to perform other methods and the hand drawn style can take effect.</p><p>If you are using the mindMap.addPlugin method to dynamically register a component, you need to call the method of re rendering once:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HandDrawnLikeStyle)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reRender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p>You may not be familiar with the following methods.</p><h3 id="createpath-svgpathstr" tabindex="-1">createPath(svgPathStr) <a class="header-anchor" href="#createpath-svgpathstr" aria-label="Permalink to &quot;createPath(svgPathStr)&quot;">​</a></h3><ul><li><code>svgPathStr</code>：SVG Path string</li></ul><p>Create a hand drawn style path node and return the path node of SVG.</p><h3 id="createpolygon-points" tabindex="-1">createPolygon(points) <a class="header-anchor" href="#createpolygon-points" aria-label="Permalink to &quot;createPolygon(points)&quot;">​</a></h3><ul><li><code>points</code>：Points array</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">points：[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [x1, y1],</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>Create a hand drawn polygon node and return the Path node of SVG.</p><h3 id="transformpath-svgpathstr" tabindex="-1">transformPath(svgPathStr) <a class="header-anchor" href="#transformpath-svgpathstr" aria-label="Permalink to &quot;transformPath(svgPathStr)&quot;">​</a></h3><p>Convert SVG Path strings to hand drawn SVG Path strings.</p>`,30),h=[l];function p(r,d,o,k,c,g){return e(),i("div",null,h)}const E=s(t,[["render",p]]);export{m as __pageData,E as default};
