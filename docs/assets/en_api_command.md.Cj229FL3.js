import{_ as e,c as a,o as t,a4 as o}from"./chunks/framework.B358x4hV.js";const k=JSON.parse('{"title":"Command instance","description":"","frontmatter":{},"headers":[],"relativePath":"en/api/command.md","filePath":"en/api/command.md"}'),i={name:"en/api/command.md"},d=o(`<h1 id="command-instance" tabindex="-1">Command instance <a class="header-anchor" href="#command-instance" aria-label="Permalink to &quot;Command instance&quot;">​</a></h1><p>The <code>command</code> instance is responsible for adding and executing commands. It includes many built-in commands and can also be added manually. A command refers to an operation that needs to add a copy to the history stack data. The <code>mindMap.command</code> instance can be obtained through this.&quot;</p><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2><h3 id="history" tabindex="-1">history <a class="header-anchor" href="#history" aria-label="Permalink to &quot;history&quot;">​</a></h3><p>The current list of all historical data. Do not manually modify the array.</p><p>Before <code>v0.14.0</code>, the array stores historical data objects, while in later versions, serialized strings are stored. If you want to use them, they need to be deserialized.</p><h3 id="activehistoryindex" tabindex="-1">activeHistoryIndex <a class="header-anchor" href="#activehistoryindex" aria-label="Permalink to &quot;activeHistoryIndex&quot;">​</a></h3><p>The current historical data index. Do not manually modify this property.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p>Please use the command &#39;Back&#39; or &#39;FORWARD&#39; to move forward or backward.</p><h3 id="pause" tabindex="-1">pause() <a class="header-anchor" href="#pause" aria-label="Permalink to &quot;pause()&quot;">​</a></h3><blockquote><p>v0.9.11+</p></blockquote><p>Pause collecting historical data.</p><h3 id="recovery" tabindex="-1">recovery() <a class="header-anchor" href="#recovery" aria-label="Permalink to &quot;recovery()&quot;">​</a></h3><blockquote><p>v0.9.11+</p></blockquote><p>Restore the collection of historical data.</p><h3 id="add-name-fn" tabindex="-1">add(name, fn) <a class="header-anchor" href="#add-name-fn" aria-label="Permalink to &quot;add(name, fn)&quot;">​</a></h3><p>Add a command.</p><p><code>name</code>: Command name</p><p><code>fn</code>: Method to be executed by the command</p><h3 id="remove-name-fn" tabindex="-1">remove(name, fn) <a class="header-anchor" href="#remove-name-fn" aria-label="Permalink to &quot;remove(name, fn)&quot;">​</a></h3><p>Remove a command.</p><p><code>name</code>: Name of the command to be removed</p><p><code>fn</code>: Method to be removed, if not provided all methods for the command will be removed</p><h3 id="getcopydata" tabindex="-1">getCopyData() <a class="header-anchor" href="#getcopydata" aria-label="Permalink to &quot;getCopyData()&quot;">​</a></h3><p>Get a copy of the rendering tree data. That is, the data of the current canvas.</p><h3 id="clearhistory" tabindex="-1">clearHistory() <a class="header-anchor" href="#clearhistory" aria-label="Permalink to &quot;clearHistory()&quot;">​</a></h3><p>Clear the history stack data</p><h3 id="addhistory" tabindex="-1">addHistory() <a class="header-anchor" href="#addhistory" aria-label="Permalink to &quot;addHistory()&quot;">​</a></h3><p>Trigger a historical stack data addition operation. Note that this method will delay execution, and the delay time can be set through the instantiation option &#39;addHistoryTime&#39;.</p><h3 id="originaddhistory" tabindex="-1">originAddHistory () <a class="header-anchor" href="#originaddhistory" aria-label="Permalink to &quot;originAddHistory ()&quot;">​</a></h3><blockquote><p>v0.12.1+</p></blockquote><p>The function is the same as the &#39;addHistory&#39; method, but this method will execute immediately without delay.</p><h3 id="extendkeymap-key-code" tabindex="-1">extendKeyMap(key, code) <a class="header-anchor" href="#extendkeymap-key-code" aria-label="Permalink to &quot;extendKeyMap(key, code)&quot;">​</a></h3><blockquote><p>v0.12.2+</p></blockquote><p><code>key</code>：The key identifier to be extended, for example, there may be multiple <code>/</code> keys on the keyboard, and the library has already defined one by default. You can define a new one and choose the name you want, for example: <code>/2</code></p><p><code>code</code>：The key value of this button</p><p>Expand key mapping.</p><p>Usage example:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.keyCommand.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">extendKeyMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">111</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.keyCommand.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addShortcut</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mindMap.renderer.toggleActiveExpand)</span></span></code></pre></div><h3 id="removekeymap-key" tabindex="-1">removeKeyMap(key) <a class="header-anchor" href="#removekeymap-key" aria-label="Permalink to &quot;removeKeyMap(key)&quot;">​</a></h3><blockquote><p>v0.12.2+</p></blockquote><p>Remove a key from the key mapping.</p>`,43),n=[d];function s(r,h,l,c,p,m){return t(),a("div",null,n)}const u=e(i,[["render",s]]);export{k as __pageData,u as default};
