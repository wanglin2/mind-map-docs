import{_ as s}from"./chunks/手绘风格.A4mGWtgg.js";import{_ as a,a as i}from"./chunks/wechat.BdsPlIbf.js";import{_ as n,c as e,o as t,a4 as l}from"./chunks/framework.B358x4hV.js";const F=JSON.parse('{"title":"HandDrawnLikeStyle 收费插件","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/handDrawnLikeStyle.md","filePath":"plugins/handDrawnLikeStyle.md"}'),p={name:"plugins/handDrawnLikeStyle.md"},h=l('<h1 id="handdrawnlikestyle-收费插件" tabindex="-1">HandDrawnLikeStyle 收费插件 <a class="header-anchor" href="#handdrawnlikestyle-收费插件" aria-label="Permalink to &quot;HandDrawnLikeStyle 收费插件&quot;">​</a></h1><p>HandDrawnLikeStyle 插件的功能是提供手绘风格的样式，也就是节点的连线、形状会变成手绘的样式，就像下面这样：</p><img src="'+s+'" style="width:800px;"><h2 id="收费" tabindex="-1">收费 <a class="header-anchor" href="#收费" aria-label="Permalink to &quot;收费&quot;">​</a></h2><blockquote><p>暂不支持购买单个插件，只能打包购买所有收费插件。</p></blockquote><p>价格：￥999，包含所有收费插件。</p><p>扫码转账备注：插件购买。以及你的邮箱地址（如果达到文字上限，那么你可以分两次付款），然后会将插件文件发送到你的邮箱。购买请在充分的使用和考虑后进行，如果你对前端开发不太熟悉，不知道如何使用插件，那么请谨慎考虑购买，没有特殊原因不会退费。如果你发现了 bug，或者有需求，可以提交相关的 issue。</p><p style="display:flex;align-items:flex-end;"><img src="'+a+'" style="width:300px;"><img src="'+i+`" style="width:300px;"></p><h2 id="注册" tabindex="-1">注册 <a class="header-anchor" href="#注册" aria-label="Permalink to &quot;注册&quot;">​</a></h2><p>1.引用打包后的文件：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HandDrawnLikeStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;handDrawnLikeStyle.cjs.min.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 或 import HandDrawnLikeStyle from &#39;handDrawnLikeStyle.esm.min.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如果你想要iife格式的打包文件，可以在插件的package.json的build命令中添加：esbuild ./index.js --bundle --minify --external:buffer --format=iife --outfile=./dist/xxx.iife.min.js --global-name=xxx，然后再执行一次npm run build即可生成</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HandDrawnLikeStyle)</span></span></code></pre></div><p>2.引用未打包的源码</p><p>可以先进入到插件目录执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span></span></code></pre></div><p>然后进入到你的项目根目录执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> simple-mind-map-plugin-handdrawnlikestyle</span></span></code></pre></div><p>然后就可以直接导入进行使用：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HandDrawnLikeStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map-plugin-handdrawnlikestyle&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HandDrawnLikeStyle)</span></span></code></pre></div><p>注册完且实例化<code>MindMap</code>后可通过<code>mindMap.handDrawnLikeStyle</code>获取到该实例。</p><p>注册该插件后，无需执行其他方法，手绘风格即可生效。</p><p>如果你是使用 mindMap.addPlugin 方法来动态注册的组件，那么需要调用一次重新渲染的方法：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HandDrawnLikeStyle)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reRender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><p>以下方法你应该不太会用到。</p><h3 id="createpath-svgpathstr" tabindex="-1">createPath(svgPathStr) <a class="header-anchor" href="#createpath-svgpathstr" aria-label="Permalink to &quot;createPath(svgPathStr)&quot;">​</a></h3><ul><li><code>svgPathStr</code>：SVG Path字符串</li></ul><p>创建一个手绘风格的路径节点，返回SVG的Path节点。</p><h3 id="createpolygon-points" tabindex="-1">createPolygon(points) <a class="header-anchor" href="#createpolygon-points" aria-label="Permalink to &quot;createPolygon(points)&quot;">​</a></h3><ul><li><code>points</code>：点位数组。</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">points：[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [x1, y1],</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>创建一个手绘风格的多边形节点，返回SVG的Path节点。</p><h3 id="transformpath-svgpathstr" tabindex="-1">transformPath(svgPathStr) <a class="header-anchor" href="#transformpath-svgpathstr" aria-label="Permalink to &quot;transformPath(svgPathStr)&quot;">​</a></h3><p>将SVG Path字符串转换成手绘风格的SVG Path字符串。</p>`,33),d=[h];function r(k,o,c,g,y,m){return t(),e("div",null,d)}const v=n(p,[["render",r]]);export{F as __pageData,v as default};
