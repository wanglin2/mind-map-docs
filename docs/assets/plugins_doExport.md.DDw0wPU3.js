import{_ as s,c as a,o as i,a4 as e}from"./chunks/framework.B358x4hV.js";const E=JSON.parse('{"title":"Export 插件","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/doExport.md","filePath":"plugins/doExport.md"}'),n={name:"plugins/doExport.md"},t=e(`<h1 id="export-插件" tabindex="-1">Export 插件 <a class="header-anchor" href="#export-插件" aria-label="Permalink to &quot;Export 插件&quot;">​</a></h1><p><code>Export</code>插件提供导出的功能。</p><p>配置请参考<a href="./../api/constructor/constructor-options.html#_2-export插件">实例化选项</a>。</p><h2 id="注册" tabindex="-1">注册 <a class="header-anchor" href="#注册" aria-label="Permalink to &quot;注册&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Export </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/Export.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// import Export from &#39;simple-mind-map/src/Export.js&#39; v0.6.0以下版本使用该路径</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Export)</span></span></code></pre></div><p>注册完且实例化<code>MindMap</code>后可通过<code>mindMap.doExport</code>获取到该实例。</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><p>所有导出的方法都是异步方法，返回一个<code>Promise</code>实例，你可以使用<code>then</code>方法获取数据，或者使用<code>async await</code>函数获取：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.doExport.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">png</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mindMap.doExport.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">png</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>返回的数据为<code>data:url</code>格式的，你可以创建一个<code>a</code>标签来触发下载：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a.href </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;xxx.png&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .png、.svg、.pdf、.md、.json、.smm、.jpg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a.download </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;xxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="png-name-transparent-false-node-null-fitbg-false" tabindex="-1">png(name, transparent = false, node = null, fitBg = false) <a class="header-anchor" href="#png-name-transparent-false-node-null-fitbg-false" aria-label="Permalink to &quot;png(name, transparent = false, node = null, fitBg = false)&quot;">​</a></h3><blockquote><p>v0.9.2以下版本为：png(name, transparent = false, checkRotate, compress)</p></blockquote><blockquote><p>v0.7.0以下版本为： png(name, transparent = false, rotateWhenWidthLongerThenHeight)</p></blockquote><ul><li><p><code>name</code>：名称，可不传</p></li><li><p><code>transparent</code>：v0.5.7+，指定导出图片的背景是否是透明的</p></li><li><p><code>rotateWhenWidthLongerThenHeight</code>: v0.6.15+，v0.7.0+已废弃，Boolean, false, 是否在图片宽比高长时自动旋转90度</p></li><li><p><code>checkRotate</code>：v0.7.0+，（v0.9.2+已废弃），Function，可以传递一个函数，接收图片的宽度和高度两个参数，返回true或false，true代表图片需要旋转90度</p></li><li><p><code>compress</code>：v0.8.1+，（v0.9.2+已废弃），null | { width, height }, 压缩图片的参数，某些情况下导出的图片长宽可能非常大，如果希望减小，那么可以通过该参数来控制，宽或高只提供一个即可，会按比例缩放</p></li><li><p><code>node</code>：v0.9.11+，节点实例，如果传了，那么会仅导出该节点的内容；</p></li><li><p><code>fitBg</code>：v0.14.0+，<code>Boolean</code>，如果带背景图片的话，传<code>true</code>则导出的图片尺寸会调整为显示完整的背景图片，否则思维导图内容多大则导出多大的尺寸，背景图片可能显示不完全。如果<code>transparent</code>传递了<code>true</code>，那么会忽略该参数</p></li></ul><p>导出为<code>png</code>。</p><h3 id="jpg-name-transparent-false-node-null-fitbg-false" tabindex="-1">jpg(name, transparent = false, node = null, fitBg = false) <a class="header-anchor" href="#jpg-name-transparent-false-node-null-fitbg-false" aria-label="Permalink to &quot;jpg(name, transparent = false, node = null, fitBg = false)&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>导出为<code>jpg</code>。参数同<code>png</code>。</p><h3 id="svg-name-pluscsstext" tabindex="-1">svg(name, plusCssText) <a class="header-anchor" href="#svg-name-pluscsstext" aria-label="Permalink to &quot;svg(name, plusCssText)&quot;">​</a></h3><ul><li><p><code>name</code>：<code>svg</code>标题</p></li><li><p><code>plusCssText</code>：v0.4.0+，（v0.6.16+已去除该参数，改为在实例化时通过<code>resetCss</code>配置传入），当开启了节点富文本编辑，且<code>domToImage</code>传了<code>false</code>时，可以添加附加的<code>css</code>样式，如果<code>svg</code>中存在<code>dom</code>节点，想要设置一些针对节点的样式可以通过这个参数传入，比如：</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">svg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \`* {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    margin: 0;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    padding: 0;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    box-sizing: border-box;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  }\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>导出为<code>svg</code>。</p><h3 id="pdf-name-transparent-false-fitbg-false" tabindex="-1">pdf(name, transparent = false, fitBg = false) <a class="header-anchor" href="#pdf-name-transparent-false-fitbg-false" aria-label="Permalink to &quot;pdf(name, transparent = false, fitBg = false)&quot;">​</a></h3><blockquote><p>v0.8.1：pdf(name, useMultiPageExport, maxImageWidth)</p></blockquote><blockquote><p>v0.2.1+</p></blockquote><ul><li><p><code>name</code>：文件名称</p></li><li><p><code>useMultiPageExport</code>: v0.6.15+，（v0.9.2+已废弃），Boolean, false, 是否多页导出，默认为单页</p></li><li><p><code>maxImageWidth</code>：v0.8.1+，（v0.9.2+已废弃），null | Number，默认为a4纸的宽度的2倍, 压缩图片的参数，某些情况下图片的长宽可能非常大，导致pdf体积也非常大，所以如果希望减小体积，那么可以通过该参数来控制图片的最大宽度</p></li><li><p><code>transparent</code>：v0.9.2+，Boolean，默认为false，指定导出图片的背景是否是透明的</p></li><li><p><code>fitBg</code>：v0.14.0+，<code>Boolean</code>，如果带背景图片的话，传<code>true</code>则导出的图片尺寸会调整为显示完整的背景图片，否则思维导图内容多大则导出多大的尺寸，背景图片可能显示不完全。如果<code>transparent</code>传递了<code>true</code>，那么会忽略该参数</p></li></ul><p>导出为<code>pdf</code>，</p><blockquote><p>v0.9.3之前的版本这个方法不会返回数据，会直接触发下载。</p></blockquote><blockquote><p>v0.6.0版本以后，需要额外注册一个ExportPDF插件</p></blockquote><blockquote><p>内部导出pdf使用的是pdf-lib库将图片转为pdf，目前当节点数量比较大时导出pdf可能会丢失部分内容，所以建议有能力的开发者自行实现pdf的导出功能，如果项目中有后端开发，也可以寻求后端开发人员的支持。</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ExportPDF </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/ExportPDF.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ExportPDF)</span></span></code></pre></div><h3 id="json-name-withconfig" tabindex="-1">json(name, withConfig) <a class="header-anchor" href="#json-name-withconfig" aria-label="Permalink to &quot;json(name, withConfig)&quot;">​</a></h3><p><code>name</code>：暂时没有用处，传空字符串即可</p><p><code>withConfig\`\`：Boolean</code>, 默认为<code>true</code>，数据中是否包含配置，否则为纯思维导图节点数据</p><p>返回<code>json</code>数据。</p><h3 id="smm-name-withconfig" tabindex="-1">smm(name, withConfig) <a class="header-anchor" href="#smm-name-withconfig" aria-label="Permalink to &quot;smm(name, withConfig)&quot;">​</a></h3><p><code>simple-mind-map</code>自定义的文件格式，其实就是<code>json</code>，和<code>json</code>方法返回的数据一模一样。</p><h3 id="md" tabindex="-1">md() <a class="header-anchor" href="#md" aria-label="Permalink to &quot;md()&quot;">​</a></h3><blockquote><p>v0.4.7+</p></blockquote><p>导出<code>markdown</code>文件。</p><h3 id="getsvgdata-node" tabindex="-1">getSvgData(node) <a class="header-anchor" href="#getsvgdata-node" aria-label="Permalink to &quot;getSvgData(node)&quot;">​</a></h3><p><code>node</code>: v0.9.11+, 节点实例，如果传了，那么会返回一个<code>clipData</code>对象，代表从完整的图片中裁剪出该节点区域的位置坐标数据；</p><p>获取<code>svg</code>数据，异步方法，返回一个对象：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  node,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// svg节点</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  str,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// svg字符串</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  clipData</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="xmind-name" tabindex="-1">xmind(name) <a class="header-anchor" href="#xmind-name" aria-label="Permalink to &quot;xmind(name)&quot;">​</a></h3><blockquote><p>v0.6.6+，需要额外注册一个ExportXMind插件</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ExportXMind </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/ExportXMind.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ExportXMind)</span></span></code></pre></div><p>导出为<code>xmind</code>文件类型，异步方法，返回一个<code>Promise</code>实例，返回的数据为一个<code>zip</code>压缩包的<code>data:url</code>数据，可以直接下载。</p><h3 id="txt" tabindex="-1">txt() <a class="header-anchor" href="#txt" aria-label="Permalink to &quot;txt()&quot;">​</a></h3><blockquote><p>v0.9.8+</p></blockquote><p>导出<code>txt</code>文件。</p>`,52),p=[t];function l(h,o,d,k,r,c){return i(),a("div",null,p)}const m=s(n,[["render",l]]);export{E as __pageData,m as default};
