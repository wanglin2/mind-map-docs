import{_ as e,c as t,o as a,a4 as i}from"./chunks/framework.B358x4hV.js";const g=JSON.parse('{"title":"OuterFrame plugin","description":"","frontmatter":{},"headers":[],"relativePath":"en/plugins/outerFrame.md","filePath":"en/plugins/outerFrame.md"}'),s={name:"en/plugins/outerFrame.md"},n=i(`<h1 id="outerframe-plugin" tabindex="-1">OuterFrame plugin <a class="header-anchor" href="#outerframe-plugin" aria-label="Permalink to &quot;OuterFrame plugin&quot;">​</a></h1><blockquote><p>v0.10.2+</p></blockquote><p>This plugin is used to implement bounding box functionality.</p><p>Version <code>v0.14.0+</code> has added the editing and display of outer frame text.</p><h2 id="register" tabindex="-1">Register <a class="header-anchor" href="#register" aria-label="Permalink to &quot;Register&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OuterFrame </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/OuterFrame.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OuterFrame)</span></span></code></pre></div><p>After registration and instantiation of <code>MindMap</code>, the instance can be obtained through <code>mindMap.outerFrame</code>.</p><p>The application can refer to the code in this section of the demo: <a href="https://github.com/wanglin2/mind-map/blob/main/web/src/pages/Edit/components/NodeOuterFrame.vue" target="_blank" rel="noreferrer">NodeOuterFrame.vue</a>。</p><h2 id="command" tabindex="-1">Command <a class="header-anchor" href="#command" aria-label="Permalink to &quot;Command&quot;">​</a></h2><p>This plugin will register the &#39;ADD_OUTER_FRAME&#39; command with the mind map to add bounding boxes to nodes:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ADD_OUTER_FRAME&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, appointNodes, config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {})</span></span></code></pre></div><ul><li><p><code>appointNodes</code>：Specify the node instance node to add the bounding box to, which can be a single node instance or an array of node instances. If passing &#39;[]&#39; or &#39;null&#39;, the bounding box will be added to the currently active node on the canvas</p></li><li><p><code>config</code>：Outline configuration, object format, and fields are as follows:</p></li></ul><table tabindex="0"><thead><tr><th>Field</th><th>Type</th><th>Default</th><th>Desc</th></tr></thead><tbody><tr><td>radius</td><td>Number</td><td>5</td><td>Size of rounded corners on the outer frame</td></tr><tr><td>strokeWidth</td><td>Number</td><td>2</td><td>Outer border width</td></tr><tr><td>strokeColor</td><td>String</td><td>#0984e3</td><td>Outer border color</td></tr><tr><td>strokeDasharray</td><td>String</td><td>5,5</td><td>Outer border dashed line</td></tr><tr><td>fill</td><td>String</td><td>rgba(9,132,227,0.05)</td><td>Outer frame fill color</td></tr><tr><td>fontSize（v0.14.0+）</td><td>Number</td><td>14</td><td>Font size of outer frame text</td></tr><tr><td>fontFamily（v0.14.0+）</td><td>String</td><td>微软雅黑, Microsoft YaHei</td><td>Font for Outer Frame Text</td></tr><tr><td>fontWeight（v0.14.0+）</td><td>String</td><td>normal</td><td>Font weight, bold</td></tr><tr><td>fontStyle（v0.14.0+）</td><td>String</td><td>normal</td><td>Font weight, italic</td></tr><tr><td>color（v0.14.0+）</td><td>String</td><td>#fff</td><td>Outer frame text color</td></tr><tr><td>lineHeight（v0.14.0+）</td><td>Number</td><td>1.2</td><td>Outer frame text line height</td></tr><tr><td>textFill（v0.14.0+）</td><td>String</td><td>#0984e3</td><td>Outer frame text background</td></tr><tr><td>textFillRadius（v0.14.0+）</td><td>Number</td><td>5</td><td>Rounded border text</td></tr><tr><td>textFillPadding（v0.14.0+）</td><td>Array</td><td>[5, 5, 5, 5]</td><td>Outer frame text rectangle inner margin. top、left、bottom、right</td></tr><tr><td>textAlign（v0.14.0+）</td><td>String</td><td>left</td><td>Horizontal display position of outer frame text, relative to the outer frame, optional values:left、center、right</td></tr></tbody></table><h2 id="event" tabindex="-1">Event <a class="header-anchor" href="#event" aria-label="Permalink to &quot;Event&quot;">​</a></h2><h3 id="outer-frame-active" tabindex="-1">outer_frame_active <a class="header-anchor" href="#outer-frame-active" aria-label="Permalink to &quot;outer_frame_active&quot;">​</a></h3><p>Triggered when clicking to activate a certain bounding box. The callback function takes three parameters: el（Outer frame elements,The rect element of library @svgdotjs/svg.js）, node（The parent node instance of the node to which this scope belongs）, range（Range interval, relative to node）</p><p>The application can listen to this event to retrieve the currently activated bounding box, retrieve its configuration, and echo it to the page. Since the scope may contain multiple nodes, the first node instance is usually taken. If you want to retrieve the position of the bounding box on the page, you can call the &#39;el.rbox&#39; method:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;outer_frame_active&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">parentNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Take the bounding box style of the first node within the range</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> firstNode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parentNode.children[range[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> firstNodeOuterFrame</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> firstNode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;outerFrame&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Obtain the position and size information of the bounding box, where you can render your configuration float layer</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> el.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rbox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="outer-frame-delete" tabindex="-1">outer_frame_delete <a class="header-anchor" href="#outer-frame-delete" aria-label="Permalink to &quot;outer_frame_delete&quot;">​</a></h3><p>Triggered when deleting the currently active bounding box on the canvas.</p><h3 id="before-show-text-edit" tabindex="-1">before_show_text_edit <a class="header-anchor" href="#before-show-text-edit" aria-label="Permalink to &quot;before_show_text_edit&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>Triggered when about to enter frame text editing.</p><h3 id="hide-text-edit" tabindex="-1">hide_text_edit <a class="header-anchor" href="#hide-text-edit" aria-label="Permalink to &quot;hide_text_edit&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>Triggered when the outer frame text editing ends.</p><h2 id="static-properties" tabindex="-1">Static properties <a class="header-anchor" href="#static-properties" aria-label="Permalink to &quot;Static properties&quot;">​</a></h2><h3 id="outerframe-defaultstyle" tabindex="-1">OuterFrame.defaultStyle <a class="header-anchor" href="#outerframe-defaultstyle" aria-label="Permalink to &quot;OuterFrame.defaultStyle&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>The default style configuration for the outer frame. You can use it for UI interface rendering.</p><h2 id="instance-properties" tabindex="-1">Instance properties <a class="header-anchor" href="#instance-properties" aria-label="Permalink to &quot;Instance properties&quot;">​</a></h2><h3 id="activeouterframe" tabindex="-1">activeOuterFrame <a class="header-anchor" href="#activeouterframe" aria-label="Permalink to &quot;activeOuterFrame&quot;">​</a></h3><p>The currently activated outer frame information, object type, includes the following content:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    el,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Outer frame container elements, Rect node instance of @svgdotjs/svg.js library</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    node,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The node instance to which the current outer frame belongs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    range</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The current outer frame contains the range of child nodes in the node instance it belongs to</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    textNode</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Outer frame text container element, G node instance of @svgdotjs/svg.js library</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="getactiveouterframe" tabindex="-1">getActiveOuterFrame() <a class="header-anchor" href="#getactiveouterframe" aria-label="Permalink to &quot;getActiveOuterFrame()&quot;">​</a></h3><p>Get the currently activated bounding box data. Return an object with the following structure:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    el,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    node,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    range</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="updateactiveouterframe-config" tabindex="-1">updateActiveOuterFrame(config = {}) <a class="header-anchor" href="#updateactiveouterframe-config" aria-label="Permalink to &quot;updateActiveOuterFrame(config = {})&quot;">​</a></h3><p>Update the currently active bounding box. After executing this method, please immediately hide your style panel as it will clear the currently active bounding box.</p><h3 id="removeactiveouterframe" tabindex="-1">removeActiveOuterFrame() <a class="header-anchor" href="#removeactiveouterframe" aria-label="Permalink to &quot;removeActiveOuterFrame()&quot;">​</a></h3><p>Delete the currently active bounding box.</p><h3 id="getrangenodelist-node-range" tabindex="-1">getRangeNodeList(node, range) <a class="header-anchor" href="#getrangenodelist-node-range" aria-label="Permalink to &quot;getRangeNodeList(node, range)&quot;">​</a></h3><p>Get a list of boxed child nodes within a specified range of a node.</p><h3 id="clearactiveouterframe" tabindex="-1">clearActiveOuterFrame() <a class="header-anchor" href="#clearactiveouterframe" aria-label="Permalink to &quot;clearActiveOuterFrame()&quot;">​</a></h3><p>Clear the currently active bounding box.</p><h3 id="getnoderangefirstnode-node-range" tabindex="-1">getNodeRangeFirstNode(node, range) <a class="header-anchor" href="#getnoderangefirstnode-node-range" aria-label="Permalink to &quot;getNodeRangeFirstNode(node, range)&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>Retrieve the first child node with an outer frame within the specified range of a node.</p><h3 id="getstyle-node" tabindex="-1">getStyle(node) <a class="header-anchor" href="#getstyle-node" aria-label="Permalink to &quot;getStyle(node)&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>Get the style of the specified outer frame.</p><h3 id="showedittextbox-g" tabindex="-1">showEditTextBox(g) <a class="header-anchor" href="#showedittextbox-g" aria-label="Permalink to &quot;showEditTextBox(g)&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><ul><li><code>g</code>: It can be obtained through instance properties: activeOuterFrame.textNode</li></ul><p>Enter the outer frame text editing.</p><h3 id="hideedittextbox" tabindex="-1">hideEditTextBox() <a class="header-anchor" href="#hideedittextbox" aria-label="Permalink to &quot;hideEditTextBox()&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>Hide the text editing box. That is to say, end the text editing.</p><h3 id="removeactiveouterframetext" tabindex="-1">removeActiveOuterFrameText() <a class="header-anchor" href="#removeactiveouterframetext" aria-label="Permalink to &quot;removeActiveOuterFrameText()&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>Delete the text of the currently activated outer frame.</p><h3 id="updateouterframestyle" tabindex="-1">updateOuterFrameStyle() <a class="header-anchor" href="#updateouterframestyle" aria-label="Permalink to &quot;updateOuterFrameStyle()&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>Update the style of the currently activated outer frame.</p>`,65),r=[n];function o(d,h,l,p,c,k){return a(),t("div",null,r)}const m=e(s,[["render",o]]);export{g as __pageData,m as default};
