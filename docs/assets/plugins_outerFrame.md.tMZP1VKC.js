import{_ as t,c as a,o as e,a4 as i}from"./chunks/framework.B358x4hV.js";const g=JSON.parse('{"title":"OuterFrame 插件","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/outerFrame.md","filePath":"plugins/outerFrame.md"}'),s={name:"plugins/outerFrame.md"},r=i(`<h1 id="outerframe-插件" tabindex="-1">OuterFrame 插件 <a class="header-anchor" href="#outerframe-插件" aria-label="Permalink to &quot;OuterFrame 插件&quot;">​</a></h1><blockquote><p>v0.10.2+</p></blockquote><p>该插件用于实现外框功能。</p><p><code>v0.14.0+</code>版本新增了外框文本编辑和显示。</p><h2 id="注册" tabindex="-1">注册 <a class="header-anchor" href="#注册" aria-label="Permalink to &quot;注册&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MindMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OuterFrame </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;simple-mind-map/src/plugins/OuterFrame.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OuterFrame)</span></span></code></pre></div><p>注册完且实例化<code>MindMap</code>后可通过<code>mindMap.outerFrame</code>获取到该实例。</p><p>应用使用可参考Demo该部分的代码：<a href="https://github.com/wanglin2/mind-map/blob/main/web/src/pages/Edit/components/NodeOuterFrame.vue" target="_blank" rel="noreferrer">NodeOuterFrame.vue</a>。</p><h2 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h2><p>该插件会向思维导图注册<code>ADD_OUTER_FRAME</code>命令，用于给节点添加外框：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ADD_OUTER_FRAME&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, appointNodes, config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {})</span></span></code></pre></div><ul><li><p><code>appointNodes</code>：指定要添加外框的节点实例节点，可以是单个节点实例，也可以是节点实例数组，如果传递<code>[]</code>或<code>null</code>，则会向画布当前激活的节点添加外框</p></li><li><p><code>config</code>：外框配置，对象格式，字段如下：</p></li></ul><table tabindex="0"><thead><tr><th>字段名称</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>radius</td><td>Number</td><td>5</td><td>外框圆角大小</td></tr><tr><td>strokeWidth</td><td>Number</td><td>2</td><td>外框边框宽度</td></tr><tr><td>strokeColor</td><td>String</td><td>#0984e3</td><td>外框边框颜色</td></tr><tr><td>strokeDasharray</td><td>String</td><td>5,5</td><td>外框边框虚线</td></tr><tr><td>fill</td><td>String</td><td>rgba(9,132,227,0.05)</td><td>外框填充颜色</td></tr><tr><td>fontSize（v0.14.0+）</td><td>Number</td><td>14</td><td>外框文字字号</td></tr><tr><td>fontFamily（v0.14.0+）</td><td>String</td><td>微软雅黑, Microsoft YaHei</td><td>外框文字字体</td></tr><tr><td>fontWeight（v0.14.0+）</td><td>String</td><td>normal</td><td>加粗，bold</td></tr><tr><td>fontStyle（v0.14.0+）</td><td>String</td><td>normal</td><td>斜体，italic</td></tr><tr><td>color（v0.14.0+）</td><td>String</td><td>#fff</td><td>外框文字颜色</td></tr><tr><td>lineHeight（v0.14.0+）</td><td>Number</td><td>1.2</td><td>外框文字行高</td></tr><tr><td>textFill（v0.14.0+）</td><td>String</td><td>#0984e3</td><td>外框文字背景</td></tr><tr><td>textFillRadius（v0.14.0+）</td><td>Number</td><td>5</td><td>外框文字圆角</td></tr><tr><td>textFillPadding（v0.14.0+）</td><td>Array</td><td>[5, 5, 5, 5]</td><td>外框文字矩内边距，左上右下</td></tr><tr><td>textAlign（v0.14.0+）</td><td>String</td><td>left</td><td>外框文字水平显示位置，相对于外框，可选值：left、center、right</td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><h3 id="outer-frame-active" tabindex="-1">outer_frame_active <a class="header-anchor" href="#outer-frame-active" aria-label="Permalink to &quot;outer_frame_active&quot;">​</a></h3><p>当点击激活某个外框时触发。回调函数接收三个参数：el（外框元素，@svgdotjs/svg.js库的rect元素）, node（该范围所属节点的父节点实例）, range（范围区间，相对于node）</p><p>应用可以监听该事件来获取当前激活的外框，获取到其配置回显到页面，因为范围可能包含多个节点，所以通常取第一个节点实例，如果要获取外框在页面上的位置，可以调用<code>el.rbox</code>方法：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mindMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;outer_frame_active&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">parentNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 取范围内第一个节点的外框样式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> firstNode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parentNode.children[range[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> firstNodeOuterFrame</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> firstNode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;outerFrame&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 获取外框的位置大小信息，你可以在该位置渲染你的配置浮层</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> el.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rbox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="outer-frame-delete" tabindex="-1">outer_frame_delete <a class="header-anchor" href="#outer-frame-delete" aria-label="Permalink to &quot;outer_frame_delete&quot;">​</a></h3><p>删除画布当前激活的外框时触发。</p><h3 id="before-show-text-edit" tabindex="-1">before_show_text_edit <a class="header-anchor" href="#before-show-text-edit" aria-label="Permalink to &quot;before_show_text_edit&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>即将进入外框文本编辑时触发。</p><h3 id="hide-text-edit" tabindex="-1">hide_text_edit <a class="header-anchor" href="#hide-text-edit" aria-label="Permalink to &quot;hide_text_edit&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>结束外框文本编辑时触发。</p><h2 id="静态属性" tabindex="-1">静态属性 <a class="header-anchor" href="#静态属性" aria-label="Permalink to &quot;静态属性&quot;">​</a></h2><h3 id="outerframe-defaultstyle" tabindex="-1">OuterFrame.defaultStyle <a class="header-anchor" href="#outerframe-defaultstyle" aria-label="Permalink to &quot;OuterFrame.defaultStyle&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>外框默认的样式配置。你可以用于ui界面的回显。</p><h2 id="实例属性" tabindex="-1">实例属性 <a class="header-anchor" href="#实例属性" aria-label="Permalink to &quot;实例属性&quot;">​</a></h2><h3 id="activeouterframe" tabindex="-1">activeOuterFrame <a class="header-anchor" href="#activeouterframe" aria-label="Permalink to &quot;activeOuterFrame&quot;">​</a></h3><p>当前激活的外框信息，对象类型，包含以下内容：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    el,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 外框容器元素，@svgdotjs/svg.js库的Rect节点实例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    node,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当前外框所属节点实例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    range</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当前外框在所属节点实例中包含的子节点范围</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    textNode</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 外框文本容器元素，@svgdotjs/svg.js库的G节点实例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="getactiveouterframe" tabindex="-1">getActiveOuterFrame() <a class="header-anchor" href="#getactiveouterframe" aria-label="Permalink to &quot;getActiveOuterFrame()&quot;">​</a></h3><p>获取当前激活的外框数据。返回一个对象，结构如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    el,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    node,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    range</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="updateactiveouterframe-config" tabindex="-1">updateActiveOuterFrame(config = {}) <a class="header-anchor" href="#updateactiveouterframe-config" aria-label="Permalink to &quot;updateActiveOuterFrame(config = {})&quot;">​</a></h3><p>更新当前激活的外框。执行了该方法后请立即隐藏你的样式面板，因为会清除当前激活的外框。</p><h3 id="removeactiveouterframe" tabindex="-1">removeActiveOuterFrame() <a class="header-anchor" href="#removeactiveouterframe" aria-label="Permalink to &quot;removeActiveOuterFrame()&quot;">​</a></h3><p>删除当前激活的外框。</p><h3 id="getrangenodelist-node-range" tabindex="-1">getRangeNodeList(node, range) <a class="header-anchor" href="#getrangenodelist-node-range" aria-label="Permalink to &quot;getRangeNodeList(node, range)&quot;">​</a></h3><p>获取某个节点指定范围的带外框的子节点列表。</p><h3 id="clearactiveouterframe" tabindex="-1">clearActiveOuterFrame() <a class="header-anchor" href="#clearactiveouterframe" aria-label="Permalink to &quot;clearActiveOuterFrame()&quot;">​</a></h3><p>清除当前激活的外框。</p><h3 id="getnoderangefirstnode-node-range" tabindex="-1">getNodeRangeFirstNode(node, range) <a class="header-anchor" href="#getnoderangefirstnode-node-range" aria-label="Permalink to &quot;getNodeRangeFirstNode(node, range)&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>获取某个节点指定范围的带外框的第一个子节点。</p><h3 id="getstyle-node" tabindex="-1">getStyle(node) <a class="header-anchor" href="#getstyle-node" aria-label="Permalink to &quot;getStyle(node)&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>获取指定外框的样式。</p><h3 id="showedittextbox-g" tabindex="-1">showEditTextBox(g) <a class="header-anchor" href="#showedittextbox-g" aria-label="Permalink to &quot;showEditTextBox(g)&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><ul><li><code>g</code>：可以通过实例属性获取，activeOuterFrame.textNode</li></ul><p>进入外框文本编辑。</p><h3 id="hideedittextbox" tabindex="-1">hideEditTextBox() <a class="header-anchor" href="#hideedittextbox" aria-label="Permalink to &quot;hideEditTextBox()&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>隐藏文本编辑框。也就是结束文本编辑。</p><h3 id="removeactiveouterframetext" tabindex="-1">removeActiveOuterFrameText() <a class="header-anchor" href="#removeactiveouterframetext" aria-label="Permalink to &quot;removeActiveOuterFrameText()&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>删除当前激活外框的文字。</p><h3 id="updateouterframestyle" tabindex="-1">updateOuterFrameStyle() <a class="header-anchor" href="#updateouterframestyle" aria-label="Permalink to &quot;updateOuterFrameStyle()&quot;">​</a></h3><blockquote><p>v0.14.0+</p></blockquote><p>更新当前激活外框的样式。</p>`,65),n=[r];function d(l,h,o,p,k,c){return e(),a("div",null,n)}const E=t(s,[["render",d]]);export{g as __pageData,E as default};
